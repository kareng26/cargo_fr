import i18n from "i18next";
import { initReactI18next } from "react-i18next";

export enum I18 {
    REGISTER_CARGO = "register_cargo",
    MAIN_INFO = "main_info",
    NAME = "name",
    DESCRIPTION = "description",
    EMPTY = "empty",
    INCORRECT_ADDRESS = "incorrect_address",
    DOESNT_MATCH = "doesnt_match",
    MORE_THAN_2 = "more_than_2",
    LESS_THAN_30 = "less_than_30",
    RECEIVER_INFO = "receiver_info",
    RECEIVER_FN = "receiver_fn",
    PHONE_NUMBER = "phone_number",
    SPECIFICATIONS = "specifications",
    VOLUME = "volume",
    WEIGHT = "weight",
    DOCUMENTS = "documents",
    WAYBILLS = "waybills",
    OTHERS = "others",
    ADDRESSES = "addresses",
    SEND_POINT = "send_point",
    DESTINATION_POINT = "destination_point",
    PREVIOUS = "previous",
    NEXT = "next",
    CREATE = "create",
    M3 = "m3",
    KG = "kg",
    SUCCESSED = "successed",
    ERROR_OCCURRED = "error_occurred",
    USER_CARGOES = "user_cargoes",
    TABLE_NAME = "table_name",
    TABLE_STATUS = "table_status",
    ROWS_PER_PAGE = "rows_per_page",
    CLICK_TO_MOVE = "click_to_move",
}

type I18Values = (typeof I18)[keyof typeof I18];

type I18Record = Record<I18Values, string>;

i18n.use(initReactI18next).init({
    resources: {
        en: {
            translation: {
                register_cargo: "register your cargo",
                main_info: "main information",
                name: "name",
                description: "description",
                empty: "cannot be empty",
                incorrect_address: "not correct address",
                doesnt_match: "does not match",
                more_than_2: "must be more than 2",
                less_than_30: "must be less than 30",
                receiver_info: "receiver's information",
                receiver_fn: "receiver's full name",
                phone_number: "phone number",
                specifications: "specifications",
                volume: "volume",
                weight: "weight",
                documents: "documents",
                waybills: "waybills",
                others: "others",
                addresses: "addresses",
                send_point: "send point",
                destination_point: "destination point",
                previous: "previous",
                next: "next",
                create: "create",
                m3: "m3",
                kg: "kg",
                successed: "successed",
                error_occurred: "error occurred",
                user_cargoes: "user cargoes",
                table_name: "name",
                table_status: "status",
                rows_per_page: "rows per page",
                click_to_move: "click to move",
            } as I18Record,
        },
        ru: {
            translation: {
                register_cargo: "создайте свой груз",
                main_info: "основная информация",
                name: "название",
                description: "описание",
                empty: "заполните поле",
                incorrect_address: "некорректный адрес",
                doesnt_match: "не соответсвует",
                more_than_2: "должно быть больше 2",
                less_than_30: "должно быть не меньше 30",
                receiver_info: "информация о получателе",
                receiver_fn: "полное имя получателя",
                phone_number: "номер телефона",
                specifications: "характеристики",
                volume: "объем",
                weight: "вес",
                documents: "документы",
                waybills: "накладные",
                others: "прочие",
                addresses: "адреса",
                send_point: "пункт отправки",
                destination_point: "пункт назначения",
                previous: "предыдущий",
                next: "следующий",
                create: "создать",
                m3: "м3",
                kg: "кг",
                successed: "успешно",
                error_occurred: "ошибка",
                user_cargoes: "все грузы пользователя",
                table_name: "название",
                table_status: "статус",
                rows_per_page: "строки на странице",
                click_to_move: "нажмите, чтобы показать на карте",
            } as I18Record,
        },
    },
    lng: "en",
    fallbackLng: "en",
    interpolation: {
        escapeValue: false,
    },
});

export default i18n;
